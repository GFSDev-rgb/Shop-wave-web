
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 260 20% 5%; /* Charcoal */
    --foreground: 30 10% 80%; /* Ash Gray */

    --card: 260 15% 9%;
    --card-foreground: 30 10% 80%;

    --popover: 260 20% 5%;
    --popover-foreground: 30 10% 80%;

    --primary: 22 28% 34%; /* Coffee */
    --primary-foreground: 30 10% 95%;

    --secondary: 260 15% 12%;
    --secondary-foreground: 30 10% 95%;

    --muted: 260 15% 12%;
    --muted-foreground: 30 10% 60%; /* Lighter Ash Gray */
    
    --accent: 31 100% 74%; /* Amber Glow */
    --accent-foreground: 22 28% 20%; /* Darker Coffee */
    
    --destructive: 0 60% 45%;
    --destructive-foreground: 30 10% 95%;
    
    --border: 260 15% 12%;
    --input: 260 15% 12%;
    --ring: 31 100% 74%;
    --radius: 0.8rem;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;

    --card-shadow: rgba(0, 0, 0, 0.2) 0 30px 60px 0, inset #333 0 0 0 5px, inset rgba(255, 255, 255, 0.5) 0 0 0 6px;
    --card-shadow-hover: hsla(0, 0%, 100%, 0.2) 0 0 40px 5px, hsl(0, 0%, 100%) 0 0 0 1px, rgba(0, 0, 0, 0.66) 0 30px 60px 0, inset #333 0 0 0 5px, inset white 0 0 0 6px;
  }

  .light {
    --background: 45 52% 91%; /* Cream: #f3ecda */
    --foreground: 18 25% 25%; /* Dark Brown */

    --card: 38 35% 88%; /* Lighter Cream/Khaki for cards */
    --card-foreground: 18 25% 25%;

    --popover: 45 52% 93%; /* Lighter Cream */
    --popover-foreground: 18 25% 25%;

    --primary: 18 42% 41%; /* Tan: #94553d */
    --primary-foreground: 45 52% 91%; /* Cream */

    --secondary: 30 24% 80%; /* Khaki: #c4ac95 */
    --secondary-foreground: 18 25% 25%; /* Dark Brown */

    --muted: 30 24% 88%; /* Even Lighter Khaki */
    --muted-foreground: 18 25% 45%; /* Muted Brown */

    --accent: 30 100% 82%; /* Peach: #ffcba4 */
    --accent-foreground: 18 42% 41%; /* Tan */
    
    --destructive: 2 68% 58%; /* Warm Red: #d9534f */
    --destructive-foreground: 45 52% 91%;

    --border: 30 24% 80%; /* Subtle Border */
    --input: 30 24% 80%;
    --ring: 18 42% 41%;

    --card-shadow: rgba(0, 1, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
    --card-shadow-hover: rgba(0, 1, 0, 0.4) 0px 2px 4px, rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
  html {
    scroll-behavior: smooth;
  }
  h1,h2,h3,h4,h5,h6 {
    @apply font-headline;
  }
}

/* 3D Product Card Styles */
.card-wrap {
  transform: perspective(800px);
  transform-style: preserve-3d;
  cursor: pointer;
  width: 100%;
  aspect-ratio: 3 / 4;
}

.card {
  position: relative;
  width: 100%;
  height: 100%;
  background-color: hsl(var(--card));
  overflow: hidden;
  border-radius: var(--radius);
  box-shadow: var(--card-shadow);
  transition: transform 1s cubic-bezier(0.445, 0.05, 0.55, 0.95), box-shadow 1s cubic-bezier(0.445, 0.05, 0.55, 0.95);
}

.card-bg {
  opacity: 1;
  position: absolute;
  top: -20px; left: -20px;
  width: calc(100% + 40px);
  height: calc(100% + 40px);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  transition:
    transform 1s cubic-bezier(0.445, 0.05, 0.55, 0.95);
  pointer-events: none;
}

/* Card info is visible by default for mobile */
.card-info {
  padding: 1rem;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  color: #fff;
  transform: translateY(0);
  transition: transform 0.4s cubic-bezier(0.23, 1, 0.32, 1);
  width: 100%;
}

.card-info * {
  position: relative;
  z-index: 1;
}

.card-info::after {
  content: '';
  position: absolute;
  top: 0; left: 0;
  z-index: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to bottom, transparent 0%, rgba(0, 0, 0, 0.8) 100%);
  opacity: 1;
  transform: translateY(0);
  transition: opacity 0.8s cubic-bezier(0.23, 1, 0.32, 1), transform 0.8s cubic-bezier(0.23, 1, 0.32, 1);
}

.card-info .card-category,
.card-info .card-title,
.card-info .card-price,
.card-info .card-buttons {
  opacity: 1;
  transition: opacity 0.6s cubic-bezier(0.23, 1, 0.32, 1);
}

.card-info .card-title {
    font-family: "Playfair Display", serif;
    font-size: 1.5rem;
    line-height: 1.2;
    font-weight: 700;
    text-shadow: rgba(0, 0, 0, 0.5) 0 10px 10px;
    margin-bottom: 0.5rem;
}
.card-info .card-price {
    font-size: 1.25rem;
    font-weight: bold;
    color: hsl(var(--primary));
    margin-bottom: 1rem;
}


/* --- Hover States for Desktop --- */
/* Only apply hover effects on devices that can hover (i.e., not touch screens) */
@media (hover: hover) {
  /* On desktop, hide card info initially */
  .card-info {
    transform: translateY(60%);
    transition: transform 0.6s 1.6s cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  .card-info::after {
    opacity: 0;
    transform: translateY(100%);
    transition: 5s 1s cubic-bezier(0.445, 0.05, 0.55, 0.95);
  }

  .card-info .card-category,
  .card-info .card-title,
  .card-info .card-price,
  .card-info .card-buttons {
    opacity: 0;
    transition: opacity 0.6s cubic-bezier(0.215, 0.61, 0.355, 1);
  }

  /* Reveal on hover */
  .card-wrap:hover .card {
    transition:
      transform 0.2s cubic-bezier(0.23, 1, 0.32, 1),
      box-shadow 0.5s cubic-bezier(0.23, 1, 0.32, 1);
    box-shadow: var(--card-shadow-hover);
  }

  .card-wrap:hover .card-bg {
    transition:
      transform 0.2s cubic-bezier(0.23, 1, 0.32, 1);
    opacity: 1;
  }

  .card-wrap:hover .card-info {
    transform: translateY(0);
    transition: transform 0.4s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .card-wrap:hover .card-info::after {
    opacity: 1;
    transform: translateY(0);
    transition: opacity 0.8s cubic-bezier(0.23, 1, 0.32, 1), transform 0.8s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .card-wrap:hover .card-info .card-category,
  .card-wrap:hover .card-info .card-title,
  .card-wrap:hover .card-info .card-price,
  .card-wrap:hover .card-info .card-buttons {
    opacity: 1;
    transition: opacity 0.6s cubic-bezier(0.23, 1, 0.32, 1);
  }
  .card-wrap:hover .card-info .card-category { transition-delay: 0s; }
  .card-wrap:hover .card-info .card-title { transition-delay: 0.1s; }
  .card-wrap:hover .card-info .card-price { transition-delay: 0.2s; }
  .card-wrap:hover .card-info .card-buttons { transition-delay: 0.3s; }
}


/* Shimmer loading animation */
@keyframes shimmer {
  from {
    background-position: -200% 0;
  }
  to {
    background-position: 200% 0;
  }
}

.shimmer-bg {
  background: linear-gradient(
    90deg,
    hsl(var(--muted) / 0.1) 25%,
    hsl(var(--muted) / 0.3) 50%,
    hsl(var(--muted) / 0.1) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s linear infinite;
}

/* SVG Loaders */
.loader {
  --path: hsl(var(--muted-foreground));
  --dot: hsl(var(--primary));
  --duration: 3s;
  width: 44px;
  height: 44px;
  position: relative;
  display: inline-block;
}

.loader:before {
  content: "";
  width: 6px;
  height: 6px;
  border-radius: 50%;
  position: absolute;
  display: block;
  background: var(--dot);
  top: 37px;
  left: 19px;
  transform: translate(-18px, -18px);
  animation: dotRect var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86)
    infinite;
}

.loader svg {
  display: block;
  width: 100%;
  height: 100%;
}

.loader svg rect,
.loader svg polygon,
.loader svg circle {
  fill: none;
  stroke: var(--path);
  stroke-width: 10px;
  stroke-linejoin: round;
  stroke-linecap: round;
}

.loader svg polygon {
  stroke-dasharray: 145 76 145 76;
  stroke-dashoffset: 0;
  animation: pathTriangle var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86)
    infinite;
}

.loader svg rect {
  stroke-dasharray: 192 64 192 64;
  stroke-dashoffset: 0;
  animation: pathRect 3s cubic-bezier(0.785, 0.135, 0.15, 0.86) infinite;
}

.loader svg circle {
  stroke-dasharray: 150 50 150 50;
  stroke-dashoffset: 75;
  animation: pathCircle var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86)
    infinite;
}

.loader.triangle {
  width: 48px;
}

.loader.triangle:before {
  left: 21px;
  transform: translate(-10px, -18px);
  animation: dotTriangle var(--duration) cubic-bezier(0.785, 0.135, 0.15, 0.86)
    infinite;
}

@keyframes pathTriangle {
  33% {
    stroke-dashoffset: 74;
  }

  66% {
    stroke-dashoffset: 147;
  }

  100% {
    stroke-dashoffset: 221;
  }
}

@keyframes dotTriangle {
  33% {
    transform: translate(0, 0);
  }

  66% {
    transform: translate(10px, -18px);
  }

  100% {
    transform: translate(-10px, -18px);
  }
}

@keyframes pathRect {
  25% {
    stroke-dashoffset: 64;
  }

  50% {
    stroke-dashoffset: 128;
  }

  75% {
    stroke-dashoffset: 192;
  }

  100% {
    stroke-dashoffset: 256;
  }
}

@keyframes dotRect {
  25% {
    transform: translate(0, 0);
  }

  50% {
    transform: translate(18px, -18px);
  }

  75% {
    transform: translate(0, -36px);
  }

  100% {
    transform: translate(-18px, -18px);
  }
}

@keyframes pathCircle {
  25% {
    stroke-dashoffset: 125;
  }

  50% {
    stroke-dashoffset: 175;
  }

  75% {
    stroke-dashoffset: 225;
  }

  100% {
    stroke-dashoffset: 275;
  }
}
